
services:

  nginx:
    container_name: nginx
    image: nginx
    build:
      context: ./requirements/nginx
      dockerfile: Dockerfile
    restart: on-failure
    ports:
      - "443:443"
    networks:
      - inception
    volumes:
      - wordpress_data:/var/www/html
    depends_on:
      - wordpress



  wordpress:
    container_name: wordpress
    image: wordpress
    build:
      context: ./requirements/wordpress
      dockerfile: Dockerfile
    restart: on-failure
    env_file:
      - .env
    environment:
      - WORDPRESS_DB_HOST=${WORDPRESS_DB_HOST}
      - WORDPRESS_DB_NAME=${WORDPRESS_DB_NAME}
      - WORDPRESS_DB_USER=${WORDPRESS_DB_USER}
      - WORDPRESS_DB_PASSWORD=${WORDPRESS_DB_PASSWORD}
    depends_on:
      - mariadb
    networks:
      - inception
    volumes:
      - wordpress_data:/var/www/html
    depends_on:
      - mariadb



  mariadb:
    container_name: mariadb
    image: mariadb
    build:
      context: ./requirements/mariadb
      dockerfile: Dockerfile
    env_file:
      - .env
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    restart: on-failure
    ports:
      - "3307:3306"
    networks:
      - inception
    volumes:
      - db_data:/var/lib/mysql



networks:
  inception:
    driver: bridge


volumes:
  db_data:
    name: "mariadb"
    driver: local
    driver_opts:
      type: "none"
      o: "bind"
      device: "/home/$USER/data/mariadb"
  wordpress_data:
    name: "wordpress"
    driver: local
    driver_opts:
      type: "none"
      o: "bind"
      device: "/home/$USER/data/wordpress"
